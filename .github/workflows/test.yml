name: Test Setup KubeSolo Action

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Cancel in-progress runs for the same workflow on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-basic-setup:
    runs-on: ubuntu-latest
    name: Test KubeSolo Setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup KubeSolo
        id: kubesolo
        uses: ./
      
      - name: Verify cluster
        run: |
          echo "Kubeconfig: ${{ steps.kubesolo.outputs.kubeconfig }}"
          echo "Cluster Info: ${{ steps.kubesolo.outputs.cluster-info }}"
          
          kubectl get nodes
      
      - name: Test persistent storage
        run: |
          echo "Creating PersistentVolume with hostPath..."
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: test-pv
          spec:
            capacity:
              storage: 1Gi
            accessModes:
              - ReadWriteOnce
            hostPath:
              path: /tmp/test-pv
              type: DirectoryOrCreate
          EOF
          
          echo "Creating PersistentVolumeClaim..."
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: test-pvc
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
          EOF
          
          echo "Waiting for PVC to be bound..."
          kubectl wait --for=jsonpath='{.status.phase}'=Bound pvc/test-pvc --timeout=30s
          
          echo "Creating Pod that uses the PVC..."
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: test-storage-pod
          spec:
            containers:
            - name: test-container
              image: alpine:latest
              command: ["sh", "-c", "echo 'Hello from PVC!' > /data/test.txt && cat /data/test.txt && sleep 10"]
              volumeMounts:
              - name: test-volume
                mountPath: /data
            volumes:
            - name: test-volume
              persistentVolumeClaim:
                claimName: test-pvc
          EOF
          
          echo "Waiting for pod to start..."
          kubectl wait --for=condition=Ready pod/test-storage-pod --timeout=60s
          
          echo "Verifying data was written to volume..."
          kubectl logs test-storage-pod
          
          echo "Cleaning up..."
          kubectl delete pod test-storage-pod --wait=false
          kubectl delete pvc test-pvc --wait=false
          kubectl delete pv test-pv --wait=false
          
          echo "âœ“ Persistent storage test passed!"


