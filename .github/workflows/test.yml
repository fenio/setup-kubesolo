name: Test Setup KubeSolo Action

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  test-basic-setup:
    runs-on: ubuntu-latest
    name: Test KubeSolo Setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup KubeSolo
        id: kubesolo
        uses: ./
      
      - name: Verify cluster
        run: |
          echo "Kubeconfig: ${{ steps.kubesolo.outputs.kubeconfig }}"
          echo "Cluster Info: ${{ steps.kubesolo.outputs.cluster-info }}"
          
          kubectl cluster-info
          kubectl get nodes
          kubectl get pods -A
      
      - name: Test persistent storage
        run: |
          echo "Creating PersistentVolumeClaim..."
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: test-pvc
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
          EOF
          
          echo "Waiting for PVC to be bound..."
          kubectl wait --for=jsonpath='{.status.phase}'=Bound pvc/test-pvc --timeout=60s
          
          echo "Creating Pod that uses the PVC..."
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: test-storage-pod
          spec:
            containers:
            - name: test-container
              image: busybox:latest
              command: ["sh", "-c", "echo 'Hello from PVC!' > /data/test.txt && sleep 30"]
              volumeMounts:
              - name: test-volume
                mountPath: /data
            volumes:
            - name: test-volume
              persistentVolumeClaim:
                claimName: test-pvc
          EOF
          
          echo "Waiting for pod to be ready..."
          kubectl wait --for=condition=Ready pod/test-storage-pod --timeout=120s
          
          echo "Verifying data was written..."
          kubectl exec test-storage-pod -- cat /data/test.txt
          
          echo "Cleaning up..."
          kubectl delete pod test-storage-pod
          kubectl delete pvc test-pvc
          
          echo "âœ“ Persistent storage test passed!"

